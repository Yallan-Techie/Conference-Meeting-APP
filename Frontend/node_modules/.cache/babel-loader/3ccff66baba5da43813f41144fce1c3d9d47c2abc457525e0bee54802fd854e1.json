{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheta\\\\OneDrive\\\\Desktop\\\\Hackathon - Copy\\\\Frontend\\\\src\\\\component\\\\common\\\\BookingCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport ApiService from '../../service/ApiService'; // ‚úÖ Adjust path if your folder is different\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingCalendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const fetchBookings = async () => {\n      try {\n        // ‚úÖ Call the backend to get all bookings\n        const response = await ApiService.getAllBookings();\n\n        // ‚úÖ Extract the data array from custom response\n        const bookings = response.data;\n\n        // üîç Debug logs to make sure we get data\n        console.log(\"üì¶ All bookings:\", bookings);\n        const calendarEvents = [];\n        bookings.forEach(booking => {\n          const date = booking.checkInDate;\n          const timeSlots = Array.isArray(booking.timeSlots) ? booking.timeSlots : [];\n          timeSlots.forEach(slot => {\n            calendarEvents.push({\n              title: slot.label,\n              // e.g. \"09:00 AM - 09:30 AM\"\n              date: date // e.g. \"2025-07-12\"\n            });\n          });\n        });\n        console.log(\"üìÖ Calendar events:\", calendarEvents);\n        setEvents(calendarEvents);\n      } catch (error) {\n        console.error(\"‚ùå Error fetching bookings:\", error);\n      }\n    };\n    fetchBookings();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Booking Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventColor: \"#ef4444\" // Red shade\n      ,\n      height: \"auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingCalendar, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = BookingCalendar;\nexport default BookingCalendar;\nvar _c;\n$RefreshReg$(_c, \"BookingCalendar\");","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","ApiService","jsxDEV","_jsxDEV","BookingCalendar","_s","events","setEvents","fetchBookings","response","getAllBookings","bookings","data","console","log","calendarEvents","forEach","booking","date","checkInDate","timeSlots","Array","isArray","slot","push","title","label","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","eventColor","height","_c","$RefreshReg$"],"sources":["C:/Users/cheta/OneDrive/Desktop/Hackathon - Copy/Frontend/src/component/common/BookingCalendar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport ApiService from '../../service/ApiService'; // ‚úÖ Adjust path if your folder is different\r\n\r\nconst BookingCalendar = () => {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchBookings = async () => {\r\n      try {\r\n        // ‚úÖ Call the backend to get all bookings\r\n        const response = await ApiService.getAllBookings();\r\n\r\n        // ‚úÖ Extract the data array from custom response\r\n        const bookings = response.data;\r\n\r\n        // üîç Debug logs to make sure we get data\r\n        console.log(\"üì¶ All bookings:\", bookings);\r\n\r\n        const calendarEvents = [];\r\n\r\n        bookings.forEach((booking) => {\r\n          const date = booking.checkInDate;\r\n          const timeSlots = Array.isArray(booking.timeSlots) ? booking.timeSlots : [];\r\n\r\n          timeSlots.forEach((slot) => {\r\n            calendarEvents.push({\r\n              title: slot.label, // e.g. \"09:00 AM - 09:30 AM\"\r\n              date: date         // e.g. \"2025-07-12\"\r\n            });\r\n          });\r\n        });\r\n\r\n        console.log(\"üìÖ Calendar events:\", calendarEvents);\r\n        setEvents(calendarEvents);\r\n\r\n      } catch (error) {\r\n        console.error(\"‚ùå Error fetching bookings:\", error);\r\n      }\r\n    };\r\n\r\n    fetchBookings();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Booking Calendar</h2>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        events={events}\r\n        eventColor=\"#ef4444\" // Red shade\r\n        height=\"auto\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingCalendar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,UAAU,MAAM,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMR,UAAU,CAACS,cAAc,CAAC,CAAC;;QAElD;QACA,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,IAAI;;QAE9B;QACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAAC;QAEzC,MAAMI,cAAc,GAAG,EAAE;QAEzBJ,QAAQ,CAACK,OAAO,CAAEC,OAAO,IAAK;UAC5B,MAAMC,IAAI,GAAGD,OAAO,CAACE,WAAW;UAChC,MAAMC,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACL,OAAO,CAACG,SAAS,CAAC,GAAGH,OAAO,CAACG,SAAS,GAAG,EAAE;UAE3EA,SAAS,CAACJ,OAAO,CAAEO,IAAI,IAAK;YAC1BR,cAAc,CAACS,IAAI,CAAC;cAClBC,KAAK,EAAEF,IAAI,CAACG,KAAK;cAAE;cACnBR,IAAI,EAAEA,IAAI,CAAS;YACrB,CAAC,CAAC;UACJ,CAAC,CAAC;QACJ,CAAC,CAAC;QAEFL,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,cAAc,CAAC;QAClDR,SAAS,CAACQ,cAAc,CAAC;MAE3B,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdd,OAAO,CAACc,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDnB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKyB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9B3B,OAAA;MAAA2B,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB/B,OAAA,CAACJ,YAAY;MACXoC,OAAO,EAAE,CAACnC,aAAa,CAAE;MACzBoC,WAAW,EAAC,cAAc;MAC1B9B,MAAM,EAAEA,MAAO;MACf+B,UAAU,EAAC,SAAS,CAAC;MAAA;MACrBC,MAAM,EAAC;IAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CApDID,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AAsDrB,eAAeA,eAAe;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}