{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheta\\\\OneDrive\\\\Desktop\\\\Hackathon - Copy\\\\Frontend\\\\src\\\\component\\\\common\\\\BookingCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport ApiService from '../../service/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingCalendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const fetchBookings = async () => {\n      try {\n        const response = await ApiService.getAllBookings();\n        const bookings = response.data;\n        const calendarEvents = [];\n        bookings.forEach(booking => {\n          var _booking$room;\n          const date = booking.checkInDate;\n          const roomType = ((_booking$room = booking.room) === null || _booking$room === void 0 ? void 0 : _booking$room.roomType) || 'Room';\n          const bookingCode = booking.confirmationCode;\n          const timeSlots = Array.isArray(booking.timeSlots) ? booking.timeSlots : [];\n\n          // ‚úÖ Push one event per slot\n          timeSlots.forEach(slot => {\n            calendarEvents.push({\n              title: `${slot.startTime} - ${slot.endTime} (${roomType})`,\n              date: date,\n              allDay: true,\n              extendedProps: {\n                confirmationCode: bookingCode\n              }\n            });\n          });\n        });\n        setEvents(calendarEvents);\n      } catch (error) {\n        console.error(\"‚ùå Failed to fetch bookings:\", error);\n      }\n    };\n    fetchBookings();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCC5 Booking Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventColor: \"#0ea5e9\" // Light Blue\n      ,\n      height: \"auto\",\n      eventDidMount: info => {\n        // ‚úÖ Optional: show tooltip with confirmation code\n        const code = info.event.extendedProps.confirmationCode;\n        if (code) {\n          info.el.title = `Code: ${code}`;\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingCalendar, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = BookingCalendar;\nexport default BookingCalendar;\nvar _c;\n$RefreshReg$(_c, \"BookingCalendar\");","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","ApiService","jsxDEV","_jsxDEV","BookingCalendar","_s","events","setEvents","fetchBookings","response","getAllBookings","bookings","data","calendarEvents","forEach","booking","_booking$room","date","checkInDate","roomType","room","bookingCode","confirmationCode","timeSlots","Array","isArray","slot","push","title","startTime","endTime","allDay","extendedProps","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","eventColor","height","eventDidMount","info","code","event","el","_c","$RefreshReg$"],"sources":["C:/Users/cheta/OneDrive/Desktop/Hackathon - Copy/Frontend/src/component/common/BookingCalendar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport ApiService from '../../service/ApiService';\r\n\r\nconst BookingCalendar = () => {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchBookings = async () => {\r\n      try {\r\n        const response = await ApiService.getAllBookings();\r\n        const bookings = response.data;\r\n\r\n        const calendarEvents = [];\r\n\r\n        bookings.forEach((booking) => {\r\n          const date = booking.checkInDate;\r\n          const roomType = booking.room?.roomType || 'Room';\r\n          const bookingCode = booking.confirmationCode;\r\n\r\n          const timeSlots = Array.isArray(booking.timeSlots) ? booking.timeSlots : [];\r\n\r\n          // ‚úÖ Push one event per slot\r\n          timeSlots.forEach((slot) => {\r\n            calendarEvents.push({\r\n              title: `${slot.startTime} - ${slot.endTime} (${roomType})`,\r\n              date: date,\r\n              allDay: true,\r\n              extendedProps: {\r\n                confirmationCode: bookingCode,\r\n              }\r\n            });\r\n          });\r\n        });\r\n\r\n        setEvents(calendarEvents);\r\n      } catch (error) {\r\n        console.error(\"‚ùå Failed to fetch bookings:\", error);\r\n      }\r\n    };\r\n\r\n    fetchBookings();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>üìÖ Booking Calendar</h2>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        events={events}\r\n        eventColor=\"#0ea5e9\" // Light Blue\r\n        height=\"auto\"\r\n        eventDidMount={(info) => {\r\n          // ‚úÖ Optional: show tooltip with confirmation code\r\n          const code = info.event.extendedProps.confirmationCode;\r\n          if (code) {\r\n            info.el.title = `Code: ${code}`;\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}